<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" total="5" passed="4">
  <reporter-output>
  </reporter-output>
  <suite name="My Strarbucks test suite" duration-ms="35243" started-at="2018-03-28T23:51:48Z" finished-at="2018-03-28T23:52:23Z">
    <groups>
      <group name="navigatorTest">
        <method signature="StarbucksTest.testTextNavsHome()[pri:0, instance:com.automation.training.StarbucksTest@2d554825]" name="testTextNavsHome" class="com.automation.training.StarbucksTest"/>
      </group> <!-- navigatorTest -->
      <group name="recomendationTest">
        <method signature="StarbucksTest.testMenuCoffe(int, int, int, int)[pri:0, instance:com.automation.training.StarbucksTest@2d554825]" name="testMenuCoffe" class="com.automation.training.StarbucksTest"/>
      </group> <!-- recomendationTest -->
      <group name="giftCardTest">
        <method signature="StarbucksTest.testGiftCard(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.automation.training.StarbucksTest@2d554825]" name="testGiftCard" class="com.automation.training.StarbucksTest"/>
      </group> <!-- giftCardTest -->
    </groups>
    <test name="My Starbucks test" duration-ms="35243" started-at="2018-03-28T23:51:48Z" finished-at="2018-03-28T23:52:23Z">
      <class name="com.automation.training.StarbucksTest">
        <test-method status="PASS" signature="beforeSuite(java.lang.String)[pri:0, instance:com.automation.training.StarbucksTest@2d554825]" name="beforeSuite" is-config="true" duration-ms="4781" started-at="2018-03-28T17:51:43Z" finished-at="2018-03-28T17:51:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="testGiftCard(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.automation.training.StarbucksTest@2d554825]" name="testGiftCard" duration-ms="12020" started-at="2018-03-28T17:51:48Z" data-provider="getDataCard" finished-at="2018-03-28T17:52:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Sergio]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[This is a message for the GIFT CARD.
Regards.]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Sergio Garcia]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[sergio@correo.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[friend@mail.com]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[4/5/2018]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGiftCard -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.automation.training.StarbucksTest@2d554825]" name="beforeMethod" is-config="true" duration-ms="756" started-at="2018-03-28T17:52:00Z" finished-at="2018-03-28T17:52:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="testGiftCard(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.automation.training.StarbucksTest@2d554825]" name="testGiftCard" duration-ms="9608" started-at="2018-03-28T17:52:01Z" data-provider="getDataCard" finished-at="2018-03-28T17:52:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Sergio]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[This is a message for the 2nd GIFT CARD.
Regards.]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Garcia Sergio]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[sergio@correo.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[friend@mail.com]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[4/5/2018]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Sergio
This is a message for the GIFT CARD. Regards.] but found [Sergio
This is a message for the 2nd GIFT CARD. Regards.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Sergio
This is a message for the GIFT CARD. Regards.] but found [Sergio
This is a message for the 2nd GIFT CARD. Regards.]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertEquals(Assert.java:123)
	at org.testng.Assert.assertEquals(Assert.java:176)
	at org.testng.Assert.assertEquals(Assert.java:186)
	at com.automation.training.StarbucksTest.testGiftCard(StarbucksTest.java:41)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGiftCard -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.automation.training.StarbucksTest@2d554825]" name="beforeMethod" is-config="true" duration-ms="944" started-at="2018-03-28T17:52:11Z" finished-at="2018-03-28T17:52:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testMenuCoffe(int, int, int, int)[pri:0, instance:com.automation.training.StarbucksTest@2d554825]" name="testMenuCoffe" duration-ms="6045" started-at="2018-03-28T17:52:12Z" data-provider="getAnswers" finished-at="2018-03-28T17:52:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMenuCoffe -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.automation.training.StarbucksTest@2d554825]" name="beforeMethod" is-config="true" duration-ms="1071" started-at="2018-03-28T17:52:18Z" finished-at="2018-03-28T17:52:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testMenuCoffe(int, int, int, int)[pri:0, instance:com.automation.training.StarbucksTest@2d554825]" name="testMenuCoffe" duration-ms="2767" started-at="2018-03-28T17:52:19Z" data-provider="getAnswers" finished-at="2018-03-28T17:52:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMenuCoffe -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.automation.training.StarbucksTest@2d554825]" name="beforeMethod" is-config="true" duration-ms="879" started-at="2018-03-28T17:52:21Z" finished-at="2018-03-28T17:52:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testTextNavsHome()[pri:0, instance:com.automation.training.StarbucksTest@2d554825]" name="testTextNavsHome" duration-ms="248" started-at="2018-03-28T17:52:22Z" finished-at="2018-03-28T17:52:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTextNavsHome -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.automation.training.StarbucksTest@2d554825]" name="beforeMethod" is-config="true" duration-ms="860" started-at="2018-03-28T17:52:23Z" finished-at="2018-03-28T17:52:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
      </class> <!-- com.automation.training.StarbucksTest -->
    </test> <!-- My Starbucks test -->
  </suite> <!-- My Strarbucks test suite -->
</testng-results>
